#!/bin/bash
# define colors for use in output
green='\033[0;32m'
no_color='\033[0m'
grey='\033[0;90m'

# Check whether any submodule is about to be updated with the
# commit. Ask the user for confirmation.
# --Chaitanya Gupta

echo "Checking if any submodules are being updated..."

# Jump to the current project's root directory (the one containing
# .git/)
ROOT_DIR=$(git rev-parse --show-cdup)

SUBMODULES=$(grep path ${ROOT_DIR}.gitmodules | sed 's/^.*path = //')

# Finding the submodules that have been modified
MOD_SUBMODULES=$(git diff --cached --name-only | grep -F "$SUBMODULES")

# If no modified submodules, exit with status code 0, else prompt the
# user and exit accordingly
if [[ -n "$MOD_SUBMODULES" ]]; then
    echo "Submodules to be committed:"
    echo "  (use \"git reset HEAD <file>...\" to unstage)"
    echo

    for SUB in $MOD_SUBMODULES
    do
        echo -e "\t${green}modified:\t$SUB${no_color}"
    done
    echo
    echo -n "Continue with commit? [n] "
    read -n 1 reply </dev/tty
    echo
    if [[ "$reply" == "y" || "$reply" == "Y" ]]; then
        exit 0
    else
        echo "Aborted commit."
        exit 1
    fi
else
    exit 0
fi
